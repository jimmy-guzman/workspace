name: Release

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn test

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        with:
          fetch-depth: 0
        uses: actions/checkout@v2

      - name: Fetch all tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Configure Git
        run: |
          git config --global user.name '@jimmy-guzman'
          git config --global user.email 'jimmy.guzman@outlook.com'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare repository
        run: |
          git checkout "${GITHUB_REF:11}"
          git pull

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Configure NPM Registry
        uses: actions/setup-node@v1
        with:
          scope: '@jimmy-guzman'
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - run: 'yarn install --frozen-lockfile'

      - name: Publish to NPM
        run: |
          yarn release:npm
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - run: 'yarn install --frozen-lockfile'

      - run: 'yarn build:app:portfolio'

      - run: 'yarn build:stories'

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" registry.jimmy.codes

      - name: Build container image
        run: docker build -t registry.jimmy.codes/portfolio:$(echo $GITHUB_SHA | head -c7) .

      - name: Push image to registry.jimmy.codes
        run: docker push registry.jimmy.codes/portfolio

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.jimmy.codes/portfolio:'${TAG}'|' $GITHUB_WORKSPACE/kubernetes/prod/portfolio-deployment.yml

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@master
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show cluster-tachos > $GITHUB_WORKSPACE/.kubeconfig

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f $GITHUB_WORKSPACE/kubernetes/prod/

      - name: Verify deployment
        run: kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status deployment/portfolio-app
